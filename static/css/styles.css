/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* waiting-for-the-sunrise-regular - latin */
@font-face {
  font-family: 'Waiting for the Sunrise';
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/waiting-for-the-sunrise-v10-latin-regular.eot");
  /* IE9 Compat Modes */
  src: local("Waiting for the Sunrise"), local("WaitingfortheSunrise"), url("../fonts/waiting-for-the-sunrise-v10-latin-regular.eot?#iefix") format("embedded-opentype"), url("../fonts/waiting-for-the-sunrise-v10-latin-regular.woff2") format("woff2"), url("../fonts/waiting-for-the-sunrise-v10-latin-regular.woff") format("woff"), url("../fonts/waiting-for-the-sunrise-v10-latin-regular.ttf") format("truetype"), url("../fonts/waiting-for-the-sunrise-v10-latin-regular.svg#WaitingfortheSunrise") format("svg");
  /* Legacy iOS */ }

/* quicksand-regular - latin */
@font-face {
  font-family: 'Quicksand';
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/quicksand-v20-latin-regular.eot");
  /* IE9 Compat Modes */
  src: local(""), url("../fonts/quicksand-v20-latin-regular.eot?#iefix") format("embedded-opentype"), url("../fonts/quicksand-v20-latin-regular.woff2") format("woff2"), url("../fonts/quicksand-v20-latin-regular.woff") format("woff"), url("../fonts/quicksand-v20-latin-regular.ttf") format("truetype"), url("../fonts/quicksand-v20-latin-regular.svg#Quicksand") format("svg");
  /* Legacy iOS */ }

/* quicksand-600 - latin */
@font-face {
  font-family: 'Quicksand';
  font-style: normal;
  font-weight: 600;
  src: url("../fonts/quicksand-v20-latin-600.eot");
  /* IE9 Compat Modes */
  src: local(""), url("../fonts/quicksand-v20-latin-600.eot?#iefix") format("embedded-opentype"), url("../fonts/quicksand-v20-latin-600.woff2") format("woff2"), url("../fonts/quicksand-v20-latin-600.woff") format("woff"), url("../fonts/quicksand-v20-latin-600.ttf") format("truetype"), url("../fonts/quicksand-v20-latin-600.svg#Quicksand") format("svg");
  /* Legacy iOS */ }

html {
  font-family: 'Quicksand', sans-serif;
  font-size: 16px;
  height: 100%;
  color: #433840; }

body {
  height: 100%;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.5; }

*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

body, h1, h2, h3, h4, h5, h6, p, ol, ul {
  margin: 0;
  padding: 0;
  font-weight: normal; }

ol, ul {
  list-style: none; }

img {
  max-width: 100%;
  display: block; }

input,
button,
textarea,
select {
  font: inherit; }

audio,
canvas,
iframe,
img,
svg,
video,
textarea {
  vertical-align: middle; }

textarea {
  resize: none; }

section {
  position: relative; }

input,
select,
button {
  outline: none; }

.wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%; }

.content {
  -webkit-box-flex: 1;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto; }

.container {
  margin: 0 auto;
  max-width: 1180px;
  width: 100%; }
  @media screen and (max-width: 1024px) {
    .container {
      max-width: 1000px; } }
  @media screen and (max-width: 768px) {
    .container {
      max-width: 700px; } }

.social-icon {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: left;
  -ms-flex-pack: left;
  justify-content: left; }
  .social-icon a {
    padding: 10px; }
    .social-icon a img {
      width: 20px;
      height: 20px; }

.footer {
  background: url(../images/content/footer.png) no-repeat;
  background-size: cover;
  padding-top: 50px;
  padding-bottom: 50px; }
  @media screen and (max-width: 768px) {
    .footer {
      padding-top: 20px;
      padding-bottom: 20px; } }
  .footer__title {
    font-weight: bold;
    font-size: 30px;
    line-height: 37px;
    color: #FFFFFF;
    margin-bottom: 20px; }
    @media screen and (max-width: 768px) {
      .footer__title {
        font-size: 20px;
        text-align: center;
        margin-bottom: 5px; } }
  .footer__top {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between; }
    @media screen and (max-width: 768px) {
      .footer__top {
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center; } }
    .footer__top__instagram__images {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      grid-gap: 10px; }
      .footer__top__instagram__images img {
        border-radius: 5px; }
  .footer-top__list {
    font-size: 20px;
    line-height: 35px;
    color: #FFFFFF; }
    @media screen and (max-width: 768px) {
      .footer-top__list {
        font-size: 16px;
        text-align: center;
        margin-bottom: 5px; } }
    .footer-top__list__item a {
      text-decoration: none;
      color: #fff; }

.footer__bottom {
  padding: 10px 280px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  color: #fff;
  background-color: #433840; }
  @media screen and (max-width: 768px) {
    .footer__bottom {
      padding: 10px 20px; } }

header {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto; }

.header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-evenly;
  -ms-flex-pack: space-evenly;
  justify-content: space-evenly;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 15px 0; }

.main-nav__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

.main-nav__item {
  padding-right: 20px; }
  .main-nav__item:last-child {
    padding-right: 0; }

.main-nav__link {
  text-decoration: none;
  line-height: 22px;
  color: #433840;
  cursor: pointer; }
  .main-nav__link:hover {
    color: #FEA3AC;
    -webkit-transition: all 300ms ease-in-out;
    -o-transition: all 300ms ease-in-out;
    transition: all 300ms ease-in-out; }
  .main-nav__link:focus {
    color: #FEA3AC; }

@media screen and (max-width: 768px) {
  .main-nav {
    display: none; } }

@-webkit-keyframes slidy {
  0% {
    left: 0%; }
  20% {
    left: 0%; }
  25% {
    left: -100%; }
  45% {
    left: -100%; }
  50% {
    left: -200%; }
  70% {
    left: -200%; }
  75% {
    left: -300%; }
  95% {
    left: -300%; }
  100% {
    left: -400%; } }

@keyframes slidy {
  0% {
    left: 0%; }
  20% {
    left: 0%; }
  25% {
    left: -100%; }
  45% {
    left: -100%; }
  50% {
    left: -200%; }
  70% {
    left: -200%; }
  75% {
    left: -300%; }
  95% {
    left: -300%; }
  100% {
    left: -400%; } }

#captioned-gallery {
  width: 100%;
  overflow: hidden; }

.banner__slider {
  position: relative;
  width: 500%;
  font-size: 0;
  -webkit-animation: 30s slidy infinite;
  animation: 30s slidy infinite; }
  .banner__slider__slide {
    width: 20%;
    height: auto;
    display: inline-block;
    position: inherit; }
    .banner__slider__slide__title {
      position: absolute;
      left: 45%;
      top: 35%;
      z-index: 99;
      font-weight: bold;
      font-size: 50px;
      line-height: 62px;
      color: #fff; }
      @media screen and (max-width: 768px) {
        .banner__slider__slide__title {
          font-size: 36px;
          line-height: 1.2;
          left: 40%; } }
      @media screen and (max-width: 480px) {
        .banner__slider__slide__title {
          font-size: 24px;
          line-height: 1.2; } }
    .banner__slider__slide__text {
      position: absolute;
      left: 40%;
      top: 50%;
      z-index: 99;
      font-family: Waiting for the Sunrise;
      font-weight: 300;
      font-size: 30px;
      line-height: 50px;
      color: #fff; }
      @media screen and (max-width: 768px) {
        .banner__slider__slide__text {
          font-size: 24px;
          line-height: 1.2;
          left: 30%; } }
      @media screen and (max-width: 480px) {
        .banner__slider__slide__text {
          font-size: 18px;
          line-height: 1.2; } }
  .banner__slider__item {
    width: 100vw;
    height: 500px;
    background-size: cover; }
    @media screen and (max-width: 768px) {
      .banner__slider__item {
        height: 300px; } }
    @media screen and (max-width: 480px) {
      .banner__slider__item {
        height: 250px; } }

.svg-style {
  position: relative; }

.svg-style::before {
  content: "";
  width: 100vw;
  height: 130px;
  background: url(../images/content/banner-top.svg) no-repeat;
  background-size: cover;
  position: absolute;
  top: 0;
  left: 0; }

.svg-style::after {
  content: "";
  width: 100vw;
  height: 110px;
  background: url(../images/content/banner-bottom.svg) no-repeat;
  background-size: cover;
  position: absolute;
  bottom: 0;
  left: 0; }

.about-box {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  margin: 100px 0; }
  .about-box__data__title {
    font-size: 30px;
    line-height: 37px;
    margin-bottom: 10px; }
    @media screen and (max-width: 768px) {
      .about-box__data__title {
        font-size: 24px; } }
  .about-box__data__text {
    font-size: 15px;
    line-height: 24px;
    color: #9A9A9A; }
  .about-box__data__article {
    margin-bottom: 40px; }
    @media screen and (max-width: 768px) {
      .about-box__data__article {
        margin-bottom: 20px; } }
    .about-box__data__article:last-child {
      margin-bottom: 0; }
      @media screen and (max-width: 768px) {
        .about-box__data__article:last-child {
          margin-bottom: 20px; } }
  @media screen and (max-width: 768px) {
    .about-box__data__pic {
      display: none; } }
  @media screen and (max-width: 1024px) {
    .about-box {
      margin: 50px; } }
  @media screen and (max-width: 768px) {
    .about-box {
      margin: 20px;
      grid-template-columns: repeat(1, 1fr); } }

.counter-box {
  position: relative;
  margin-bottom: 100px; }
  @media screen and (max-width: 768px) {
    .counter-box {
      margin-bottom: 40px; } }
  @media screen and (max-width: 480px) {
    .counter-box {
      margin-bottom: 20px; } }
  .counter-box .counter-list {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    min-height: 600px;
    background-size: cover;
    background-color: #FEA3AC; }
    @media screen and (max-width: 768px) {
      .counter-box .counter-list {
        grid-template-columns: repeat(2, 1fr);
        padding-top: 20%;
        padding-bottom: 20%; } }
    @media screen and (max-width: 480px) {
      .counter-box .counter-list {
        grid-template-columns: repeat(1, 1fr); } }
    .counter-box .counter-list__item {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      padding: 20% 0; }
      @media screen and (max-width: 768px) {
        .counter-box .counter-list__item {
          padding: 10% 0; } }
      .counter-box .counter-list__item__pic {
        margin: 0 auto; }
      .counter-box .counter-list__item .timer {
        font-family: Waiting for the Sunrise;
        font-size: 60px;
        line-height: 99px;
        color: #DFEEB6; }
        @media screen and (max-width: 768px) {
          .counter-box .counter-list__item .timer {
            font-size: 40px;
            line-height: 1.2; } }
        @media screen and (max-width: 480px) {
          .counter-box .counter-list__item .timer {
            font-size: 30px;
            line-height: 1.2; } }
      .counter-box .counter-list__item__text {
        font-weight: bold;
        font-size: 20px;
        line-height: 25px;
        color: #FFFFFF; }
        @media screen and (max-width: 768px) {
          .counter-box .counter-list__item__text {
            font-size: 18px;
            line-height: 1.2; } }
        @media screen and (max-width: 480px) {
          .counter-box .counter-list__item__text {
            font-size: 16px;
            line-height: 1.2; } }

.team-box {
  margin-bottom: 100px; }
  .team-box__title {
    font-weight: bold;
    font-size: 50px;
    line-height: 62px;
    color: #433840;
    text-align: center; }
    @media screen and (max-width: 768px) {
      .team-box__title {
        font-size: 40px;
        line-height: 1.2; } }
    @media screen and (max-width: 480px) {
      .team-box__title {
        font-size: 30px;
        line-height: 1.2; } }
  .team-box__subtitle {
    font-family: Waiting for the Sunrise;
    font-size: 30px;
    line-height: 50px;
    color: #F7A1A8;
    text-align: center;
    margin-bottom: 60px; }
    @media screen and (max-width: 768px) {
      .team-box__subtitle {
        font-size: 20px;
        line-height: 1.2;
        margin-bottom: 20px; } }
    @media screen and (max-width: 480px) {
      .team-box__subtitle {
        font-size: 18px;
        line-height: 1.2; } }
  .team-box__items {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 40px; }
    @media screen and (max-width: 1024px) {
      .team-box__items {
        grid-template-columns: repeat(1, 1fr);
        grid-gap: 10px; } }
    .team-box__items__item {
      width: 70%;
      border-radius: 5px;
      margin-bottom: 40px;
      padding: 25px;
      background: #C9E3F4;
      margin-left: 190px; }
      @media screen and (max-width: 480px) {
        .team-box__items__item {
          margin: 0 auto;
          padding: 15px; } }
      .team-box__items__item:nth-child(2), .team-box__items__item:nth-child(3) {
        background: #DFEEB6; }
      .team-box__items__item:nth-child(3), .team-box__items__item:nth-child(4) {
        margin-left: 0;
        margin-right: 190px; }
        @media screen and (max-width: 1024px) {
          .team-box__items__item:nth-child(3), .team-box__items__item:nth-child(4) {
            margin: 0 auto; } }
      .team-box__items__item__foto {
        margin-left: -190px;
        margin-bottom: 25px;
        float: left;
        margin-right: 17px;
        -webkit-transition: all 1s linear;
        -o-transition: all 1s linear;
        transition: all 1s linear; }
        @media screen and (max-width: 480px) {
          .team-box__items__item__foto {
            margin: 0 auto; } }
        .team-box__items__item__foto :hover {
          -webkit-transform: scale(1.2, 1.2);
          -ms-transform: scale(1.2, 1.2);
          transform: scale(1.2, 1.2); }
      .team-box__items__item__foto-right {
        margin-left: 17px;
        margin-right: -190px;
        margin-bottom: 25px;
        float: right;
        -webkit-transition: all 1s linear;
        -o-transition: all 1s linear;
        transition: all 1s linear; }
        @media screen and (max-width: 480px) {
          .team-box__items__item__foto-right {
            margin: 0 auto; } }
        .team-box__items__item__foto-right :hover {
          -webkit-transform: scale(1.2, 1.2);
          -ms-transform: scale(1.2, 1.2);
          transform: scale(1.2, 1.2); }
      .team-box__items__item__data__title {
        padding-top: 25px;
        font-weight: bold;
        font-size: 30px;
        line-height: 37px;
        color: #FFFFFF; }
        @media screen and (max-width: 768px) {
          .team-box__items__item__data__title {
            font-size: 20px;
            line-height: 1.5; } }
        @media screen and (max-width: 480px) {
          .team-box__items__item__data__title {
            font-size: 16px; } }
      .team-box__items__item__data__subtitle {
        font-size: 20px;
        line-height: 25px; }
        @media screen and (max-width: 768px) {
          .team-box__items__item__data__subtitle {
            font-size: 15px;
            line-height: 1.5; } }
      .team-box__items__item__data__text {
        font-size: 15px;
        line-height: 25px; }
        @media screen and (max-width: 768px) {
          .team-box__items__item__data__text {
            font-size: 12px;
            line-height: 1.5; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
